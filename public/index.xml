<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wada811/blog</title>
    <link>http://blog.wada811.com</link>
    <language>ja-JP</language>
    <author>wada811</author>
    <rights>(C) 2015</rights>
    <updated>2015-08-31 08:57:15 &#43;0900 JST</updated>

    
      
        <item>
          <title>Pattern of symbolic link</title>
          <link>http://blog.wada811.com/post/pattern-of-symbolic-link/</link>
          <pubDate>Mon, 31 Aug 2015 08:57:15 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/pattern-of-symbolic-link/</guid>
          <description>

&lt;h2 id=&#34;シンボリックリンクの作成:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;シンボリックリンクの作成&lt;/h2&gt;

&lt;h3 id=&#34;ファイルのシンボリックリンクを作成する:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;ファイルのシンボリックリンクを作成する&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ln -s ./path/to/source/file ./path/to/target/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ディレクトリのシンボリックリンクを作成する:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;ディレクトリのシンボリックリンクを作成する&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ln -s ./path/to/source/directory/ ./path/to/target/directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;元ディレクトリの末尾のスラッシュがないとエラーになる&lt;/li&gt;
&lt;li&gt;リンク先ディレクトリの末尾のスラッシュがあるとエラーになる&lt;/li&gt;
&lt;li&gt;既にリンク先に同名のディレクトリが存在する場合は上手く作成できない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;シンボリックリンクの削除:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;シンボリックリンクの削除&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;unlink ./path/to/target/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こちらはファイルもディレクトリも同じ。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Decode session data in Rails</title>
          <link>http://blog.wada811.com/post/decode-session-data-in-rails/</link>
          <pubDate>Fri, 28 Aug 2015 22:34:01 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/decode-session-data-in-rails/</guid>
          <description>&lt;p&gt;Rails の Session データは marshal して base64 されている。&lt;br&gt;
&lt;code&gt;marshal&lt;/code&gt;: オブジェクトのシリアライズ関数&lt;/p&gt;

&lt;p&gt;Session の中身を見たいときは以下のコードでデコードできる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;data = &amp;quot;BAhJIhFzZXNzaW9uIGRhdGEGOgZFVA==\n&amp;quot; # session data
Rack::Session::Cookie::Base64::Marshal.new.decode(data)
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>tail しながら grep する</title>
          <link>http://blog.wada811.com/post/grep-while-tailing/</link>
          <pubDate>Thu, 27 Aug 2015 21:13:26 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/grep-while-tailing/</guid>
          <description>&lt;p&gt;アクセスログを &lt;code&gt;tail -f&lt;/code&gt; でリアルタイム監視しながら、
その結果を &lt;code&gt;grep&lt;/code&gt; でフィルタリングしたいという事ありますよね。&lt;/p&gt;

&lt;p&gt;そんな時は &lt;code&gt;grep&lt;/code&gt; のオプションの &lt;code&gt;--line-buffered&lt;/code&gt; をつければよいです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tail -f access.log | grep --line-buffered &amp;quot;Status: 500&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Custom application class in Xamarin.Android</title>
          <link>http://blog.wada811.com/post/custom-application-class-in-xamarin-android/</link>
          <pubDate>Fri, 21 Aug 2015 15:00:24 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/custom-application-class-in-xamarin-android/</guid>
          <description>

&lt;h2 id=&#34;implement-custom-application-class:1290c20d3d444cf326da594cdc171eb6&#34;&gt;Implement custom application class&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;[Application]
public class MyApplication : Application
{
    public MyApplication(IntPtr handle, JniHandleOwnership ownerShip) : base(handle, ownerShip)
    {
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;普通に実装して &lt;code&gt;AndroidManifest.xml&lt;/code&gt; に追記してもダメで、
&lt;code&gt;[Application]&lt;/code&gt; 属性とコンストラクタが必要でした。&lt;/p&gt;

&lt;h2 id=&#34;reference:1290c20d3d444cf326da594cdc171eb6&#34;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/21427981/how-to-register-my-own-application-subclass-in-xamarin-android&#34;&gt;monodroid - How to register my own Application subclass in Xamarin.Android? - Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Quick Command-line File Completion by peco</title>
          <link>http://blog.wada811.com/post/quick-command-line-file-completion-by-peco/</link>
          <pubDate>Wed, 19 Aug 2015 15:26:05 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/quick-command-line-file-completion-by-peco/</guid>
          <description>

&lt;h2 id=&#34;きっかけ:f11adac4d23e91fb43a637592828e7bc&#34;&gt;きっかけ&lt;/h2&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;これ、便利だな。peco 以来の life changing なツールかもしれない。 / Quick Command-line File Completion &lt;a href=&#34;https://t.co/8HH8nKDEa2&#34;&gt;https://t.co/8HH8nKDEa2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hiroshi Kurokawa (@hydrakecat) &lt;a href=&#34;https://twitter.com/hydrakecat/status/625112129272582144&#34;&gt;2015, 7月 26&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;それ-peco-でもできるよ:f11adac4d23e91fb43a637592828e7bc&#34;&gt;それ peco でもできるよ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wada811/dotfiles/commit/194702f&#34;&gt;https://github.com/wada811/dotfiles/commit/194702f&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;function peco-select-file() {
    LBUFFER+=$(\find . | \peco)
    CURSOR=$#LBUFFER
}
zle -N peco-select-file

# 一覧からファイルを選択
bindkey &#39;^f&#39; peco-select-file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ctrl-f-でファイル選択:f11adac4d23e91fb43a637592828e7bc&#34;&gt;Ctrl + F でファイル選択&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gyazo.com/1534b6e12d9410287a003c81377515b6&#34;&gt;&lt;img src=&#34;http://blog.wada811.com/images/quick-command-line-file-completion-by-peco/quick-command-line-file-completion-by-peco.gif&#34; alt=&#34;quick-command-line-file-completion-by-peco&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;peco-が最強すぎるんだよなぁ:f11adac4d23e91fb43a637592828e7bc&#34;&gt;peco が最強すぎるんだよなぁ&lt;/h2&gt;

&lt;p&gt;以上です。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>[Android] Compound ListView のパフォーマンス、あるいは MergeAdapter が便利という話</title>
          <link>http://blog.wada811.com/post/performance-of-compound-listview-in-android/</link>
          <pubDate>Sun, 28 Jun 2015 09:05:54 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/performance-of-compound-listview-in-android/</guid>
          <description>

&lt;h2 id=&#34;compound-listview-とは:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;Compound ListView とは&lt;/h2&gt;

&lt;p&gt;ListView に異なる種類のView、特に ListView を含む ListView のこと。（命名、俺）&lt;/p&gt;

&lt;p&gt;例↓&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;┌──────────────┐
│┌────────────┐│
││  TextView  ││
│└────────────┘│
│┌────────────┐│
││  ListView  ││
│└────────────┘│
│┌────────────┐│
││   Button   ││
│└────────────┘│
│┌────────────┐│
││  TextView  ││
│└────────────┘│
│┌────────────┐│
││  ListView  ││
│└────────────┘│
│┌────────────┐│
││   Button   ││
│└────────────┘│
└──────────────┘
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sample-code:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;Sample Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wada811/Android-Compound-ListView-Sample&#34;&gt;wada811/Android-Compound-ListView-Sample&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;実装方法:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;実装方法&lt;/h2&gt;

&lt;h3 id=&#34;views-in-scrollview:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;Views in ScrollView&lt;/h3&gt;

&lt;p&gt;普通に ScrollView に View を入れていく方法。&lt;br&gt;
ListView は ScrollView の中ではアイテム１個分の高さしか表示されないので&lt;br&gt;
以下のようなコードを書いて全件の高さを計算して ListView の高さを設定する必要がある。&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;ListAdapter listAdapter = listView.getAdapter();
if(listAdapter == null){
    return;
}
int totalHeight = listView.getPaddingTop() + listView.getPaddingBottom();
for(int i = 0; i &amp;lt; listAdapter.getCount(); i++){
    View listItem = listAdapter.getView(0, null, listView);
    if(listItem instanceof ViewGroup){
        listItem.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
    }
    listItem.measure(0, 0);
    totalHeight += listItem.getMeasuredHeight();
}

ViewGroup.LayoutParams params = listView.getLayoutParams();
params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
listView.setLayoutParams(params);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mergeadapter:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;MergeAdapter&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/commonsguy/cwac-merge&#34;&gt;commonsguy/cwac-merge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/yyaammaa/items/d31dc8f67da87ca36574&#34;&gt;Android - MergeAdapterが便利 - Qiita&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MergeAdapter というライブラリを使って ListView に様々な View を入れていく方法。&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;ListView listView = (ListView)findViewById(R.id.ListView);

MergeAdapter mergeAdapter = new MergeAdapter();

View view = LayoutInflater.from(this).inflate(R.layout.list, null, false);

TextView textView1 = (TextView)view.findViewById(R.id.TextView1);
ListView listView1 = (ListView)view.findViewById(R.id.ListView1);
Button button1 = (Button)view.findViewById(R.id.Button1);
TextView textView2 = (TextView)view.findViewById(R.id.TextView2);
ListView listView2 = (ListView)view.findViewById(R.id.ListView2);
Button button2 = (Button)view.findViewById(R.id.Button2);

mergeAdapter.addView(textView1);
mergeAdapter.addAdapter(listView1.getAdapter());
mergeAdapter.addView(button1);
mergeAdapter.addView(textView2);
mergeAdapter.addAdapter(listView2.getAdapter());
mergeAdapter.addView(button2);

listView.setAdapter(mergeAdapter);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;パフォーマンス:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;パフォーマンス&lt;/h2&gt;

&lt;h3 id=&#34;views-in-scrollview-1:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;Views in ScrollView&lt;/h3&gt;

&lt;p&gt;実装方法を見て分かる通り、ListView の要素を全て getView して高さを計算するので&lt;br&gt;
ListView の要素数が大きくなると描画までの時間が長くなる。&lt;/p&gt;

&lt;h3 id=&#34;mergeadapter-1:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;MergeAdapter&lt;/h3&gt;

&lt;p&gt;MergeAdapter に追加しているのは Adapter なので画面に表示されない部分は描画されない。
また、View も内部的に Adapter に変換されているのでパフォーマンスが良い。&lt;/p&gt;

&lt;h2 id=&#34;クリックイベントのハンドリング:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;クリックイベントのハンドリング&lt;/h2&gt;

&lt;h3 id=&#34;views-in-scrollview-2:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;Views in ScrollView&lt;/h3&gt;

&lt;p&gt;通常と変わらない。&lt;/p&gt;

&lt;h3 id=&#34;mergeadapter-2:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;MergeAdapter&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;MergeAdapter&lt;/code&gt;をセットした&lt;code&gt;ListView&lt;/code&gt;で&lt;code&gt;setOnItemClickListener&lt;/code&gt;をセットしても&lt;br&gt;
クリックイベントが取得できるのは&lt;code&gt;addAdapter&lt;/code&gt;で追加したものだけ。&lt;br&gt;
&lt;code&gt;Button&lt;/code&gt;などの&lt;code&gt;View&lt;/code&gt;を追加した場合は、そちらにリスナーをセットしなければならない。&lt;br&gt;
&lt;code&gt;Adapter&lt;/code&gt;は追加した全ての&lt;code&gt;View&lt;/code&gt;の中での&lt;code&gt;position&lt;/code&gt;になっているので扱いにくい。&lt;br&gt;
なので&lt;code&gt;Adapter&lt;/code&gt;は内部で&lt;code&gt;View&lt;/code&gt;に対してリスナーをセットしたほうが良いと思う。&lt;/p&gt;

&lt;h2 id=&#34;まとめ:7d366705399c35e2be3c9bc9a68a2ec1&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;MergeAdapter&lt;/code&gt;は便利。
だけどクリックイベントのハンドリングが少し微妙。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>[Android] Espresso で他の Activity を起動する</title>
          <link>http://blog.wada811.com/post/launch-other-activity-in-espresso/</link>
          <pubDate>Mon, 15 Jun 2015 08:07:37 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/launch-other-activity-in-espresso/</guid>
          <description>

&lt;h2 id=&#34;activitytestrule-を使う:25ac792ae434c8df3a9a95e88e774068&#34;&gt;ActivityTestRule を使う&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;ActivityTestRule&amp;lt;OtherActivity&amp;gt; rule = new ActivityTestRule&amp;lt;&amp;gt;(clazz);
rule.launchActivity(intent);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとは起動した画面をスクリーンショット撮るとかすれば画面のテストが出来ます。&lt;br&gt;
&lt;a href=&#34;https://github.com/wada811/Android-DatePicker-Sample/blob/master/app/src/androidTest/java/com/wada811/android_datepicker_sample/DatePickerTest.java&#34;&gt;Android-DatePicker-Sample/DatePickerTest.java at master · wada811/Android-DatePicker-Sample&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考:25ac792ae434c8df3a9a95e88e774068&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.android.com/reference/android/support/test/rule/ActivityTestRule.html&#34;&gt;ActivityTestRule | Android Developers&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.sqisland.com/2015/04/espresso-21-activitytestrule.html&#34;&gt;Square Island: Espresso 2.1: ActivityTestRule&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>[Android] DatePicker のレイアウトのフラグがカオスな件について</title>
          <link>http://blog.wada811.com/post/datepicker-layout-flag-in-android/</link>
          <pubDate>Sun, 07 Jun 2015 20:54:09 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/datepicker-layout-flag-in-android/</guid>
          <description>

&lt;h2 id=&#34;カオスな-datepicker-のレイアウトのフラグ:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;カオスな DatePicker のレイアウトのフラグ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;API Level&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:calendarViewShown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:spinnersShown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:datePickerMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;spinner&lt;/code&gt; or &lt;code&gt;calendar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;datePickerMode&lt;/code&gt;は未指定もしくは&lt;code&gt;spinner&lt;/code&gt;がLollipop 未満の表示です。&lt;br&gt;
&lt;code&gt;calendar&lt;/code&gt;が Lollipop からの表示になります。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;レイアウトの切り替えにフラグが3種類って嫌な予感しかしませんね。&lt;/p&gt;

&lt;h2 id=&#34;各属性を設定した場合の表示の違い:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;各属性を設定した場合の表示の違い&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Theme.AppCompat&lt;/code&gt;を指定した&lt;code&gt;FragmentActivity&lt;/code&gt;のスクリーンショットです。&lt;br&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;DatePickerPattern1&lt;/th&gt;
&lt;th&gt;DatePickerPattern2&lt;/th&gt;
&lt;th&gt;DatePickerPattern3&lt;/th&gt;
&lt;th&gt;DatePickerPattern4&lt;/th&gt;
&lt;th&gt;DatePickerPattern5&lt;/th&gt;
&lt;th&gt;DatePickerPattern6&lt;/th&gt;
&lt;th&gt;DatePickerPattern7&lt;/th&gt;
&lt;th&gt;DatePickerPattern8&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:datePickerMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;spinner&lt;/td&gt;
&lt;td&gt;spinner&lt;/td&gt;
&lt;td&gt;spinner&lt;/td&gt;
&lt;td&gt;spinner&lt;/td&gt;
&lt;td&gt;calendar&lt;/td&gt;
&lt;td&gt;calendar&lt;/td&gt;
&lt;td&gt;calendar&lt;/td&gt;
&lt;td&gt;calendar&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:calendarViewShown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;android:spinnersShown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Screenshot&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Spinner_isCalendarViewShown_false_isSpinnersShown_false_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Spinner_isCalendarViewShown_false_isSpinnersShown_false_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Spinner_isCalendarViewShown_false_isSpinnersShown_true_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Spinner_isCalendarViewShown_false_isSpinnersShown_true_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Spinner_isCalendarViewShown_true_isSpinnersShown_false_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Spinner_isCalendarViewShown_true_isSpinnersShown_false_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Spinner_isCalendarViewShown_true_isSpinnersShown_true_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Spinner_isCalendarViewShown_true_isSpinnersShown_true_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Calendar_isCalendarViewShown_false_isSpinnersShown_false_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Calendar_isCalendarViewShown_false_isSpinnersShown_false_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Calendar_isCalendarViewShown_false_isSpinnersShown_true_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Calendar_isCalendarViewShown_false_isSpinnersShown_true_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Calendar_isCalendarViewShown_true_isSpinnersShown_false_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Calendar_isCalendarViewShown_true_isSpinnersShown_false_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/wada811/Android-DatePicker-Sample/raw/master/screenshots/DatePickerInFragmentActivity_Calendar_isCalendarViewShown_true_isSpinnersShown_true_Theme_AppCompat.png&#34; alt=&#34;DatePickerInFragmentActivity_Calendar_isCalendarViewShown_true_isSpinnersShown_true_Theme_AppCompat.png&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;DatePickerPattern1~4 は Lollipop 未満の表示です。&lt;br&gt;
DatePickerPattern5~8 は&lt;code&gt;android:datePickerMode=&amp;quot;calendar&amp;quot;&lt;/code&gt;が
&lt;code&gt;calendarViewShown&lt;/code&gt;と&lt;code&gt;spinnersShown&lt;/code&gt;より強いので全て Lollipop のカレンダー表示になっています。&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;どうしてこうなった:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;どうしてこうなった&lt;/h2&gt;

&lt;p&gt;そもそも &lt;code&gt;bool&lt;/code&gt; で定義すべきではない表示形式を
&lt;code&gt;calendarViewShown&lt;/code&gt; と &lt;code&gt;spinnersShown&lt;/code&gt; の2種類の &lt;code&gt;bool&lt;/code&gt; で表してしまったことが全ての元凶です。
本来は3種類のレイアウトを2種類の &lt;code&gt;bool&lt;/code&gt; で表現したため、4種類の状態が表現できるようになってしました。
そこに &lt;code&gt;calendarViewShown&lt;/code&gt; と &lt;code&gt;spinnersShown&lt;/code&gt; よりも強い &lt;code&gt;datePickerMode&lt;/code&gt; が追加されカオスな状況になりました。&lt;/p&gt;

&lt;h2 id=&#34;どうすべきだったのか:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;どうすべきだったのか&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;calendarViewShown&lt;/code&gt;と&lt;code&gt;spinnersShown&lt;/code&gt;の両方に&lt;code&gt;false&lt;/code&gt;を指定した際に&lt;br&gt;
何も表示しない状態がある時点で怪しいと思わなければならないと思います。&lt;br&gt;
Lollipop 未満の時点で表示形式は以下のような&lt;code&gt;enum&lt;/code&gt;で定義したほうが良かったと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;enum DatePickerMode {
    spinenr,
    calendar,
    spinner_and_calendar
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そうすれば DatePickerPattern1 のような何も表示されない状態もなく、&lt;br&gt;
Lollipop で追加された表示形式も、テーマ次第で&lt;code&gt;calendar&lt;/code&gt;などの表示を変えてしまうとか&lt;br&gt;
&lt;code&gt;material&lt;/code&gt;とか何とかを&lt;code&gt;enum&lt;/code&gt;の値に追加するだけで済んだと思います。&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;怪しいフラグを増やしそうになったら抽象化して考えて&lt;code&gt;bool&lt;/code&gt;が適切か考えましょう。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Android の DatePicker がクソとかそういう話はどうでもよくて、その bool 、本当に bool ですか？という話です&lt;/p&gt;&amp;mdash; あなたとReSharper (@wada811) &lt;a href=&#34;https://twitter.com/wada811/status/608622501401223168&#34;&gt;June 10, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;リポジトリ:6fd935a4dd578ae815fb8cb261e243f7&#34;&gt;リポジトリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wada811/Android-DatePicker-Sample&#34;&gt;wada811/Android-DatePicker-Sample&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Get java.lang.Class on Xamarin.Android</title>
          <link>http://blog.wada811.com/post/get-java.lang.class-on-xamarin.android/</link>
          <pubDate>Fri, 22 May 2015 22:51:27 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/get-java.lang.class-on-xamarin.android/</guid>
          <description>

&lt;h2 id=&#34;xamarin-android-で-intent-を生成するためにクラスを取得したい:c423852fc440cc0c59f022eb76a62046&#34;&gt;Xamarin.Android で Intent を生成するためにクラスを取得したい&lt;/h2&gt;

&lt;p&gt;Java だったら以下のように &lt;code&gt;MainActivity.class&lt;/code&gt; で取得できる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static Intent createIntent(Context context){
    Intent intent = new Intent(context, MainActivity.class);
    return intent;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし、 Xamarin.Android は C# なので Java の java.lang.Class は &lt;code&gt;.class&lt;/code&gt; で取得できない。&lt;/p&gt;

&lt;p&gt;代わりに以下のように &lt;code&gt;typeof(MainActivity)&lt;/code&gt; で取得する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static Intent createIntent(Context context){
    var intent = new Intent(context, typeof(MainActivity));
    return intent;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>[Visual Studio]アドインの読み込み</title>
          <link>http://blog.wada811.com/post/visual-studio-addins-settings/</link>
          <pubDate>Wed, 15 Apr 2015 11:44:36 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/visual-studio-addins-settings/</guid>
          <description>

&lt;h2 id=&#34;アドインの読み込み:76f0a034b2b9c138b348d556e841115b&#34;&gt;アドインの読み込み&lt;/h2&gt;

&lt;p&gt;アドインを入手した場合、Visual Studio からアドインを読み込むためには Visual Studio が認識できるディレクトリに置く必要があります。&lt;/p&gt;

&lt;h3 id=&#34;visual-studio-が認識できるディレクトリ:76f0a034b2b9c138b348d556e841115b&#34;&gt;Visual Studio が認識できるディレクトリ&lt;/h3&gt;

&lt;p&gt;[ツール] &amp;gt; [オプション] &amp;gt; [環境] &amp;gt; [アドイン セキュリティ] を開くと、下図のようなダイアログボックスが開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wada811.com/images/visual-studio-addins-settings/VisualStudioAddinSettings.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;変数&lt;/th&gt;
&lt;th&gt;パス&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%ALLUSERSPROFILE%&lt;/td&gt;
&lt;td&gt;C:\Users\Public&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%APPDATA%&lt;/td&gt;
&lt;td&gt;C:\Users\&lt;strong&gt;username&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%VSAPPDATA%&lt;/td&gt;
&lt;td&gt;C:\Users\&lt;strong&gt;username&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%VSCOMMONAPPDATA%&lt;/td&gt;
&lt;td&gt;C:\Users\Public&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%VSMYDOCUMENTS%&lt;/td&gt;
&lt;td&gt;C:\Users\&lt;strong&gt;username&lt;/strong&gt;\Documents\Visual Studio 2013&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;読み込み:76f0a034b2b9c138b348d556e841115b&#34;&gt;読み込み&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;C:\Users\username\Documents\Visual Studio 2013\Addins&lt;/code&gt; に保存して再起動すれば読み込まれます。&lt;/p&gt;

&lt;h2 id=&#34;参考:76f0a034b2b9c138b348d556e841115b&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.kanazawa-net.ne.jp/~pmansato/vs/vs_addin.htm#store&#34;&gt;アドインの格納 | Visual Studio アドイン&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Hugo Getting Started</title>
          <link>http://blog.wada811.com/post/hugo-getting-started/</link>
          <pubDate>Wed, 04 Mar 2015 22:40:40 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/hugo-getting-started/</guid>
          <description>

&lt;h2 id=&#34;hugo-http-gohugo-io-とは:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; とは&lt;/h2&gt;

&lt;p&gt;静的サイトジェネレータ。
ブログを生成して GitHub Pages でホスティングしている人が多い印象。&lt;/p&gt;

&lt;h2 id=&#34;hugo-のインストール:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;Hugo のインストール&lt;/h2&gt;

&lt;h3 id=&#34;mac-の場合:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;Mac の場合&lt;/h3&gt;

&lt;p&gt;Homebrew でインストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;その他の場合:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;その他の場合&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/overview/quickstart&#34;&gt;Installing Hugo&lt;/a&gt; を読んで。&lt;/p&gt;

&lt;h2 id=&#34;静的サイトの作成-http-gohugo-io-overview-quickstart-step-2-have-hugo-create-a-site-for-you-09c84f91027bd18b03251c05a0da4abb:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;&lt;a href=&#34;http://gohugo.io/overview/quickstart/#step-2-have-hugo-create-a-site-for-you:09c84f91027bd18b03251c05a0da4abb&#34;&gt;静的サイトの作成&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;hugo new blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;blog&lt;/code&gt; は何でも良い。好きな名前を付けて欲しい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tree blog
├── archetypes/
├── config.toml
├── content/
├── layouts/
└── static/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記のような構造が生成される。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以降は作成されたディレクトリ内で作業を行う。&lt;/p&gt;

&lt;h2 id=&#34;テーマのインストール-http-gohugo-io-overview-quickstart-step-4-install-some-themes-09c84f91027bd18b03251c05a0da4abb:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;&lt;a href=&#34;http://gohugo.io/overview/quickstart/#step-4-install-some-themes:09c84f91027bd18b03251c05a0da4abb&#34;&gt;テーマのインストール&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/spf13/hugoThemes.git themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まずはテーマをインストールして使いたいものがないか探す。
あんまり種類はないので全部確認できると思う。&lt;/p&gt;

&lt;h3 id=&#34;テーマの確認:1ed0ad5d32c7c542b4ef497f50bc0229&#34;&gt;テーマの確認&lt;/h3&gt;

&lt;p&gt;以下のコマンドでテーマを選んでプレビューしよう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server -t &amp;quot;`ls themes | peco`&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;peco をインストールしていない場合は themes 以下のディレクトリ名を指定。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>git commit --amend でコミットメッセージを編集しない方法</title>
          <link>http://blog.wada811.com/post/git-commit-amend-no-edit-message/</link>
          <pubDate>Tue, 03 Mar 2015 08:51:30 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/git-commit-amend-no-edit-message/</guid>
          <description>&lt;p&gt;&lt;code&gt;git commit --amend&lt;/code&gt; するとコミットメッセージを編集することになります。
コミットメッセージは別に編集したくない場合や、
シェルスクリプトで &lt;code&gt;git commit --amend&lt;/code&gt; を使いたい場合は
いちいちコミットメッセージの編集画面になるのが面倒です。
何か方法はないかと探してみると以下の方法がありました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit --amend --allow-empty-message -m &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-m &amp;quot;&amp;quot;&lt;/code&gt; で空のコミットメッセージで上書きされてしまうのではないかと心配になりますが大丈夫みたいです。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Markdown style check</title>
          <link>http://blog.wada811.com/post/markdown-style-check/</link>
          <pubDate>Mon, 23 Feb 2015 09:23:06 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/markdown-style-check/</guid>
          <description>

&lt;h2 id=&#34;references:713741fc5da2543b8d20b1add94e545e&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/markdown-basics/&#34;&gt;Markdown Basics - User Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown/&#34;&gt;GitHub Flavored Markdown - User Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;basic-writing:713741fc5da2543b8d20b1add94e545e&#34;&gt;Basic writing&lt;/h2&gt;

&lt;h3 id=&#34;paragraphs:713741fc5da2543b8d20b1add94e545e&#34;&gt;Paragraphs&lt;/h3&gt;

&lt;p&gt;テキストを1行以上の改行でパラグラフを分ける。&lt;/p&gt;

&lt;p&gt;パラグラフ１です。パラグラフ１です。パラグラフ１です。パラグラフ１です。パラグラフ１です。パラグラフ１です。パラグラフ１です。&lt;/p&gt;

&lt;p&gt;パラグラフ２です。パラグラフ２です。パラグラフ２です。パラグラフ２です。パラグラフ２です。パラグラフ２です。パラグラフ２です。&lt;/p&gt;

&lt;h3 id=&#34;headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Headings&lt;/h3&gt;

&lt;h1 id=&#34;first-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;First largest headings&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;#&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h2 id=&#34;second-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Second largest headings&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;##&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h3 id=&#34;third-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Third largest headings&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;###&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h4 id=&#34;forth-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Forth largest headings&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;####&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h5 id=&#34;fifth-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Fifth largest headings&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;#####&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h6 id=&#34;sixth-largest-headings:713741fc5da2543b8d20b1add94e545e&#34;&gt;Sixth largest headings&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;######&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;h3 id=&#34;blockquotes:713741fc5da2543b8d20b1add94e545e&#34;&gt;Blockquotes&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;引用テキスト&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;styling-text:713741fc5da2543b8d20b1add94e545e&#34;&gt;Styling text&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt; で囲ったテキストはイタリックになる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;**&lt;/code&gt; で囲ったテキストはボールドになる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~~&lt;/code&gt; で囲ったテキストは打ち消しになる。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This text will be italic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This text will be bold&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;This text will be strikethrough&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;組み合わせることも可能。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everyone &lt;strong&gt;must&lt;/strong&gt; attend the meeting at 5 o&amp;rsquo;clock today.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Everyone &lt;em&gt;must&lt;/em&gt; attend the meeting at 5 o&amp;rsquo;clock today.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;lists:713741fc5da2543b8d20b1add94e545e&#34;&gt;Lists&lt;/h2&gt;

&lt;h3 id=&#34;unordered-lists:713741fc5da2543b8d20b1add94e545e&#34;&gt;Unordered lists&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;-&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Item&lt;/li&gt;
&lt;li&gt;Item&lt;/li&gt;
&lt;li&gt;Item&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ordered-lists:713741fc5da2543b8d20b1add94e545e&#34;&gt;Ordered lists&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;数字.&lt;/code&gt; の後、テキストを記述する。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 3&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;nested-lists:713741fc5da2543b8d20b1add94e545e&#34;&gt;Nested lists&lt;/h3&gt;

&lt;p&gt;2つスペースを開ければネストできる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hoge

&lt;ol&gt;
&lt;li&gt;hoge&lt;/li&gt;
&lt;li&gt;piyo&lt;/li&gt;
&lt;li&gt;fuga&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;foo

&lt;ol&gt;
&lt;li&gt;foo&lt;/li&gt;
&lt;li&gt;bar&lt;/li&gt;
&lt;li&gt;baz&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;spam

&lt;ol&gt;
&lt;li&gt;spam&lt;/li&gt;
&lt;li&gt;ham&lt;/li&gt;
&lt;li&gt;eggs&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;code-formatting:713741fc5da2543b8d20b1add94e545e&#34;&gt;Code formatting&lt;/h2&gt;

&lt;h3 id=&#34;inline-formats:713741fc5da2543b8d20b1add94e545e&#34;&gt;Inline formats&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;`&lt;/code&gt; で囲ったテキストはコードフォーマットされる。&lt;/p&gt;

&lt;p&gt;This is &lt;code&gt;inline code&lt;/code&gt; or &lt;code&gt;inline variable&lt;/code&gt; example.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;``SELECT * FROM `users`;`` # Surround with double backquotes when escaping single backquote.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;SELECT * FROM `users`;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;multiple-lines:713741fc5da2543b8d20b1add94e545e&#34;&gt;Multiple lines&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;```&lt;/code&gt;  で囲ったテキストはコードブロックになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```
```` ``` ````  で囲ったテキストはコードブロックになる。
```
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;syntax-highlighting:713741fc5da2543b8d20b1add94e545e&#34;&gt;Syntax highlighting&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;redcarpet&#39;
markdown = Redcarpet.new(&amp;quot;Hello World!&amp;quot;)
puts markdown.to_html
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;```ruby
require &#39;redcarpet&#39;
markdown = Redcarpet.new(&amp;quot;Hello World!&amp;quot;)
puts markdown.to_html
```
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;links:713741fc5da2543b8d20b1add94e545e&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[link text](link url)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.wada811.com/&#34;&gt;wada811/blog&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;url-autolinking:713741fc5da2543b8d20b1add94e545e&#34;&gt;URL autolinking&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.wada811.com/&#34;&gt;http://blog.wada811.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tables:713741fc5da2543b8d20b1add94e545e&#34;&gt;Tables&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| Name | Description          |
| ------------- | ----------- |
| Help      | Display the help window.|
| Close     | Closes a window     |
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Help&lt;/td&gt;
&lt;td&gt;Display the help window.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Close&lt;/td&gt;
&lt;td&gt;Closes a window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| Name | Description          |
| ------------- | ----------- |
| Help      | ~~Display the~~ help window.|
| Close     | _Closes_ a window     |
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Help&lt;/td&gt;
&lt;td&gt;&lt;del&gt;Display the&lt;/del&gt; help window.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Close&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Closes&lt;/em&gt; a window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| Left-Aligned  | Center Aligned  | Right Aligned |
| :------------ |:---------------:| -----:|
| col 3 is      | some wordy text | $1600 |
| col 2 is      | centered        |   $12 |
| zebra stripes | are neat        |    $1 |
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Left-Aligned&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Center Aligned&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Right Aligned&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;col 3 is&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;some wordy text&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;col 2 is&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;centered&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$12&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;zebra stripes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;are neat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Hugoでブログを書くことにしました</title>
          <link>http://blog.wada811.com/post/blog-powered-by-hugo/</link>
          <pubDate>Sun, 22 Feb 2015 16:13:22 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/blog-powered-by-hugo/</guid>
          <description>

&lt;p&gt;今まで Blogger でブログを書いていましたが Hugo に移行しました。(過去記事は移行できていないけど…)&lt;/p&gt;

&lt;p&gt;移行理由は、主に以下の2つ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blogger のプレビューが重くて少し書いては1分くらいプレビューが表示されるのを待つという状況&lt;/li&gt;
&lt;li&gt;最近は Qiita で Markdown を使って書くようになり、ブログも Markdown で書きたいという欲求&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hugo は Markdown で書いてすぐプレビューができるので最高っぽい。&lt;/p&gt;

&lt;h3 id=&#34;参考:862c1fa61dd509d8503fc5aef0061056&#34;&gt;参考&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo :: A fast and modern static website engine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/12/25/hugo/&#34;&gt;OctopressからHugoへ移行した | SOTA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://re-dzine.net/2015/01/hugo/&#34;&gt;MiddlemanからHugoへ移行した | REFLECTDESIGN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://t32k.me/mol/log/hugo/&#34;&gt;Jekyllが許されるのは小学生までだよね - MOL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rakuishi.com/archives/wordpress-to-hugo/&#34;&gt;WordPress から Hugo に乗り換えました - rakuishi.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://yet.unresolved.xyz/blog/2015/01/04/migrate-blog-to-hugo-from-octopress/&#34;&gt;ブログをOctopressからHugoに移行した | Unresolved&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://syui.github.io/blog/2015/01/08/hugo-github-pages/&#34;&gt;サイトジェネレーターのHUGOを使ってみた - MBA-HACK2&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
