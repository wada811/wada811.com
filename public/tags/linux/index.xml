<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wada811/blog</title>
    <link>http://blog.wada811.com</link>
    <language>ja-JP</language>
    <author>wada811</author>
    <rights>(C) 2015</rights>
    <updated>2015-09-09 08:44:56 &#43;0900 JST</updated>

    
      
        <item>
          <title>Install Ruby on CentOS</title>
          <link>http://blog.wada811.com/post/install-ruby-on-centos/</link>
          <pubDate>Wed, 09 Sep 2015 08:44:56 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/install-ruby-on-centos/</guid>
          <description>

&lt;p&gt;バージョンによる違いはないと思う。&lt;br&gt;
実行したのは Amazon Linux だけど CentOS も同じかと。&lt;/p&gt;

&lt;h2 id=&#34;git-のインストール:fbdc783f65e943e91a1771365b63edd8&#34;&gt;Git のインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もし入ってなかったら。&lt;/p&gt;

&lt;h2 id=&#34;rbenv-のインストール:fbdc783f65e943e91a1771365b63edd8&#34;&gt;rbenv のインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;bash-profile-の編集:fbdc783f65e943e91a1771365b63edd8&#34;&gt;~/.bash_profile の編集&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;vim .bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PATH=$PATH:$HOME/bin:$HOME/.rbenv/bin&lt;/code&gt; に変更。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sstephenson/rbenv&#34;&gt;sstephenson/rbenv&lt;/a&gt; だと先頭に追加しているけど問題なさそうなので末尾に追加した。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eval &amp;quot;$(rbenv init -)&amp;quot;&lt;/code&gt; も追加。&lt;/p&gt;

&lt;h3 id=&#34;bash-profile-の変更の反映:fbdc783f65e943e91a1771365b63edd8&#34;&gt;~/.bash_profile の変更の反映&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;source .bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ruby-build-のインストール:fbdc783f65e943e91a1771365b63edd8&#34;&gt;ruby-build のインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;rbenv install&lt;/code&gt; が使えるようになる。&lt;/p&gt;

&lt;h2 id=&#34;ruby-のインストール:fbdc783f65e943e91a1771365b63edd8&#34;&gt;Ruby のインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;rbenv rehash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なんかやったら &lt;code&gt;rbenv rehash&lt;/code&gt; が必要。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rbenv install -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;バージョンのリストアップ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rbenv install 2.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;バージョンを指定してインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y gcc openssl-devel readline-devel zlib-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーになるので必要な物をインストール。&lt;br&gt;
成功するまで Ruby のインストールを繰り返す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rbenv rehash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストール成功したら &lt;code&gt;rbenv rehash&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rbenv versions
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;バージョン一覧を表示してインストール成功を確認。&lt;/p&gt;

&lt;h2 id=&#34;ruby-のバージョンを指定:fbdc783f65e943e91a1771365b63edd8&#34;&gt;Ruby のバージョンを指定&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;rbenv global 2.2.3
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Pattern of symbolic link</title>
          <link>http://blog.wada811.com/post/pattern-of-symbolic-link/</link>
          <pubDate>Mon, 31 Aug 2015 08:57:15 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/pattern-of-symbolic-link/</guid>
          <description>

&lt;h2 id=&#34;シンボリックリンクの作成:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;シンボリックリンクの作成&lt;/h2&gt;

&lt;h3 id=&#34;ファイルのシンボリックリンクを作成する:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;ファイルのシンボリックリンクを作成する&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ln -s ./path/to/source/file ./path/to/target/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ディレクトリのシンボリックリンクを作成する:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;ディレクトリのシンボリックリンクを作成する&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ln -s ./path/to/source/directory/ ./path/to/target/directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;元ディレクトリの末尾のスラッシュがないとエラーになる&lt;/li&gt;
&lt;li&gt;リンク先ディレクトリの末尾のスラッシュがあるとエラーになる&lt;/li&gt;
&lt;li&gt;既にリンク先に同名のディレクトリが存在する場合は上手く作成できない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;シンボリックリンクの削除:8cee3ad8099ef0c8ef17afd60cab78cc&#34;&gt;シンボリックリンクの削除&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;unlink ./path/to/target/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こちらはファイルもディレクトリも同じ。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>tail しながら grep する</title>
          <link>http://blog.wada811.com/post/grep-while-tailing/</link>
          <pubDate>Thu, 27 Aug 2015 21:13:26 JST</pubDate>
          <author>wada811</author>
          <guid>http://blog.wada811.com/post/grep-while-tailing/</guid>
          <description>&lt;p&gt;アクセスログを &lt;code&gt;tail -f&lt;/code&gt; でリアルタイム監視しながら、
その結果を &lt;code&gt;grep&lt;/code&gt; でフィルタリングしたいという事ありますよね。&lt;/p&gt;

&lt;p&gt;そんな時は &lt;code&gt;grep&lt;/code&gt; のオプションの &lt;code&gt;--line-buffered&lt;/code&gt; をつければよいです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tail -f access.log | grep --line-buffered &amp;quot;Status: 500&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    

  </channel>
</rss>
